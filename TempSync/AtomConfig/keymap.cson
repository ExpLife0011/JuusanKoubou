# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts. Unlike style sheets however,
# each selector can only be declared once.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson
'body':
  'f1': 'pane:show-previous-item'
  'f2': 'pane:show-next-item'
  'f4': 'core:close'
  'alt-z': 'pane:reopen-closed-item'
  'ctrl-shift-T': 'atom-terminal:open'
'atom-text-editor':
  'f1': 'pane:show-previous-item'
  'f2': 'pane:show-next-item'
  'ctrl-b': 'script:run'
  'alt-f': 'native!'
  'alt-h': 'native!'
  'ctrl-r': 'symbols-view:toggle-file-symbols'
'atom-text-editor.vim-mode.normal-mode':
  'ctrl-r': 'symbols-view:toggle-file-symbols'
'atom-workspace':
  'alt--': 'last-cursor-position:previous'
  'alt-=': 'last-cursor-position:next'
'atom-text-editor.vim-mode':
  'ctrl-c': 'core:copy'
'atom-text-editor.vim-mode:not(.insert-mode)':
  'ctrl-b': 'script:run'
  'ctrl-f': 'native!'
'atom-text-editor.vim-mode.insert-mode':
  'ctrl-y': 'core:redo'
